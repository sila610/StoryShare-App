{"version":3,"file":"947.864b907deff32508f131.bundle.js","mappings":"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","sources":["webpack://ceritaapp/./src/api/api.js","webpack://ceritaapp/./src/model/storyModel.js","webpack://ceritaapp/./src/views/loginView.js","webpack://ceritaapp/./src/presenter/loginPresenter.js","webpack://ceritaapp/./src/auth/login.js"],"sourcesContent":["const BASE_URL = 'https://story-api.dicoding.dev/v1';\r\n\r\nexport async function registerUser(name, email, password) {\r\n  const res = await fetch(`${BASE_URL}/register`, {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({ name, email, password }),\r\n  });\r\n  return await res.json();\r\n}\r\n\r\nexport async function loginUser(email, password) {\r\n  const res = await fetch(`${BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({ email, password }),\r\n  });\r\n  return await res.json();\r\n}\r\n\r\nexport async function fetchStories(token, page = 1, size = 10, location = 0) {\r\n  const url = new URL(`${BASE_URL}/stories`);\r\n  url.searchParams.set('page', page);\r\n  url.searchParams.set('size', size);\r\n  url.searchParams.set('location', location);\r\n\r\n  const res = await fetch(url.toString(), {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  return await res.json();\r\n}\r\n\r\nexport async function addStory(token, description, photoFile, lat = null, lon = null) {\r\n  const formData = new FormData();\r\n  formData.append('description', description);\r\n  formData.append('photo', photoFile);\r\n  if (lat !== null) formData.append('lat', lat);\r\n  if (lon !== null) formData.append('lon', lon);\r\n\r\n  const res = await fetch(`${BASE_URL}/stories`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: formData,\r\n  });\r\n  return await res.json();\r\n}\r\n\r\nexport async function addStoryGuest(description, photoFile, lat = null, lon = null) {\r\n  const formData = new FormData();\r\n  formData.append('description', description);\r\n  formData.append('photo', photoFile);\r\n  if (lat !== null) formData.append('lat', lat);\r\n  if (lon !== null) formData.append('lon', lon);\r\n\r\n  const res = await fetch(`${BASE_URL}/stories/guest`, {\r\n    method: 'POST',\r\n    body: formData,\r\n  });\r\n  return await res.json();\r\n}\r\n\r\nexport async function subscribePushNotification(token, subscription) {\r\n  // Kirim hanya bagian penting subscription ke server\r\n  const filteredSubscription = {\r\n    endpoint: subscription.endpoint,\r\n    keys: {\r\n      p256dh: subscription.keys.p256dh,\r\n      auth: subscription.keys.auth,\r\n    },\r\n  };\r\n\r\n  const res = await fetch(`${BASE_URL}/notifications/subscribe`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(filteredSubscription),\r\n  });\r\n  return await res.json();\r\n}\r\n\r\nexport async function unsubscribePushNotification(token, endpoint) {\r\n  const res = await fetch(`${BASE_URL}/notifications/subscribe`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({ endpoint }),\r\n  });\r\n  return await res.json();\r\n}\r\n\r\nexport async function sendNotification(reportId, token) {\r\n  const res = await fetch(`${BASE_URL}/notifications/send`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({ reportId }),\r\n  });\r\n  return await res.json();\r\n}","import * as api from '../api/api.js';\r\n\r\nexport function getToken() {\r\n  return localStorage.getItem('token');\r\n}\r\n\r\nexport function setToken(token) {\r\n  localStorage.setItem('token', token);\r\n}\r\n\r\nexport function removeToken() {\r\n  localStorage.removeItem('token');\r\n}\r\n\r\nexport function getUserName() {\r\n  return localStorage.getItem('userName');\r\n}\r\n\r\nexport function setUserName(name) {\r\n  localStorage.setItem('userName', name);\r\n}\r\n\r\nexport async function loginUser(email, password) {\r\n  return await api.loginUser(email, password);\r\n}\r\n\r\nexport async function registerUser(name, email, password) {\r\n  return await api.registerUser(name, email, password);\r\n}\r\n\r\nexport async function fetchStories(token, page = 1, size = 10, location = 0) {\r\n  return await api.fetchStories(token, page, size, location);\r\n}\r\n\r\nexport async function postStory(token, description, photoFile, lat, lon) {\r\n  return await api.addStory(token, description, photoFile, lat, lon);\r\n}\r\n\r\nexport async function subscribePushNotification(token, subscription) {\r\n  return await api.subscribePushNotification(token, subscription);\r\n}\r\n\r\nexport async function unsubscribePushNotification(token, endpoint) {\r\n  return await api.unsubscribePushNotification(token, endpoint);\r\n}\r\n","export default class LoginView {\r\n  constructor(container) {\r\n    this.container = container;\r\n    this.onSubmit = null;\r\n    this.onAlert = null;\r\n  }\r\n\r\n  render() {\r\n    this.container.innerHTML = `\r\n      <h2 style=\"text-align:center; margin-bottom:20px; font-weight:700; font-size:28px; color:#333;\">Login</h2>\r\n      <form id=\"loginForm\" class=\"story-form\" aria-label=\"Form Login Pengguna\">\r\n        <div class=\"form-control\">\r\n          <label for=\"email\">Email:</label>\r\n          <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Masukkan email\" required aria-required=\"true\" />\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label for=\"password\">Password:</label>\r\n          <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Masukkan password\" required aria-required=\"true\" />\r\n        </div>\r\n        <div class=\"form-buttons\" style=\"margin-top: 20px;\">\r\n          <button class=\"btn\" type=\"submit\">Masuk</button>\r\n          <button type=\"button\" id=\"cancel-button\" class=\"btn btn-outline\">Batal</button>\r\n        </div>\r\n      </form>\r\n    `;\r\n\r\n    this.#bindEvents();\r\n  }\r\n\r\n  #bindEvents() {\r\n    const form = this.container.querySelector('#loginForm');\r\n    const cancelBtn = this.container.querySelector('#cancel-button');\r\n\r\n    form.addEventListener('submit', (e) => {\r\n      e.preventDefault();\r\n      const email = form.elements['email'].value.trim();\r\n      const password = form.elements['password'].value;\r\n\r\n      if (!email || !password) {\r\n        this.onAlert?.('Email dan password harus diisi.');\r\n        return;\r\n      }\r\n\r\n      if (this.onSubmit) {\r\n        this.onSubmit(email, password);\r\n      }\r\n    });\r\n\r\n    cancelBtn.addEventListener('click', () => {\r\n      window.location.hash = '#home'; // navigasi ke home saat batal\r\n    });\r\n  }\r\n\r\n  showError(message) {\r\n    this.onAlert?.(message);\r\n  }\r\n}\r\n","// src/presenter/loginPresenter.js\r\nimport * as model from '../model/storyModel.js';\r\nimport { navigateTo } from '../index.js';\r\n\r\nexport default class LoginPresenter {\r\n  constructor(view) {\r\n    this.view = view;\r\n    this.view.onSubmit = this.handleLogin.bind(this);\r\n  }\r\n\r\n  async handleLogin(email, password) {\r\n    try {\r\n      const result = await model.loginUser(email, password);\r\n\r\n      if (!result.error && result.loginResult && result.loginResult.token) {\r\n        model.setToken(result.loginResult.token);\r\n        model.setUserName(result.loginResult.name || 'Guest');\r\n\r\n        sessionStorage.setItem('loginSuccess', 'true');\r\n\r\n        if (typeof window.updateNav === 'function') {\r\n          window.updateNav();\r\n        }\r\n\r\n        await navigateTo('#stories');\r\n      } else {\r\n        this.view.showError(`Login gagal: ${result.message || 'Email atau password salah.'}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      this.view.showError('Terjadi kesalahan saat login, silakan coba lagi.');\r\n    }\r\n  }\r\n}\r\n","import LoginView from '../views/loginView.js';\r\nimport LoginPresenter from '../presenter/loginPresenter.js';\r\n\r\nexport default function login(container) {\r\n  const view = new LoginView(container);\r\n  const presenter = new LoginPresenter(view);\r\n  view.render();\r\n}\r\n"],"names":["BASE_URL","getToken","localStorage","getItem","setToken","token","setItem","setUserName","name","async","email","password","res","fetch","method","headers","body","JSON","stringify","json","page","size","location","url","URL","searchParams","set","toString","Authorization","postStory","description","photoFile","lat","lon","formData","FormData","append","LoginView","constructor","container","this","onSubmit","onAlert","render","innerHTML","form","querySelector","cancelBtn","addEventListener","e","preventDefault","elements","value","trim","window","hash","showError","message","LoginPresenter","view","handleLogin","bind","result","error","loginResult","sessionStorage","updateNav","console","login"],"sourceRoot":""}