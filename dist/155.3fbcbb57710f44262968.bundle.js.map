{"version":3,"file":"155.3fbcbb57710f44262968.bundle.js","mappings":"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","sources":["webpack://ceritaapp/./src/api/api.js","webpack://ceritaapp/./src/model/storyModel.js","webpack://ceritaapp/./src/views/addStoryView.js","webpack://ceritaapp/./src/presenter/addStoryPresenter.js"],"sourcesContent":["const BASE_URL = 'https://story-api.dicoding.dev/v1';\r\n\r\nexport async function registerUser(name, email, password) {\r\n  const res = await fetch(`${BASE_URL}/register`, {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({ name, email, password }),\r\n  });\r\n  return await res.json();\r\n}\r\n\r\nexport async function loginUser(email, password) {\r\n  const res = await fetch(`${BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({ email, password }),\r\n  });\r\n  return await res.json();\r\n}\r\n\r\nexport async function fetchStories(token, page = 1, size = 10, location = 0) {\r\n  const url = new URL(`${BASE_URL}/stories`);\r\n  url.searchParams.set('page', page);\r\n  url.searchParams.set('size', size);\r\n  url.searchParams.set('location', location);\r\n\r\n  const res = await fetch(url.toString(), {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  return await res.json();\r\n}\r\n\r\nexport async function addStory(token, description, photoFile, lat = null, lon = null) {\r\n  const formData = new FormData();\r\n  formData.append('description', description);\r\n  formData.append('photo', photoFile);\r\n  if (lat !== null) formData.append('lat', lat);\r\n  if (lon !== null) formData.append('lon', lon);\r\n\r\n  const res = await fetch(`${BASE_URL}/stories`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: formData,\r\n  });\r\n  return await res.json();\r\n}\r\n\r\nexport async function addStoryGuest(description, photoFile, lat = null, lon = null) {\r\n  const formData = new FormData();\r\n  formData.append('description', description);\r\n  formData.append('photo', photoFile);\r\n  if (lat !== null) formData.append('lat', lat);\r\n  if (lon !== null) formData.append('lon', lon);\r\n\r\n  const res = await fetch(`${BASE_URL}/stories/guest`, {\r\n    method: 'POST',\r\n    body: formData,\r\n  });\r\n  return await res.json();\r\n}\r\n\r\nexport async function subscribePushNotification(token, subscription) {\r\n  // Kirim hanya bagian penting subscription ke server\r\n  const filteredSubscription = {\r\n    endpoint: subscription.endpoint,\r\n    keys: {\r\n      p256dh: subscription.keys.p256dh,\r\n      auth: subscription.keys.auth,\r\n    },\r\n  };\r\n\r\n  const res = await fetch(`${BASE_URL}/notifications/subscribe`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(filteredSubscription),\r\n  });\r\n  return await res.json();\r\n}\r\n\r\nexport async function unsubscribePushNotification(token, endpoint) {\r\n  const res = await fetch(`${BASE_URL}/notifications/subscribe`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({ endpoint }),\r\n  });\r\n  return await res.json();\r\n}\r\n\r\nexport async function sendNotification(reportId, token) {\r\n  const res = await fetch(`${BASE_URL}/notifications/send`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({ reportId }),\r\n  });\r\n  return await res.json();\r\n}","import * as api from '../api/api.js';\r\n\r\nexport function getToken() {\r\n  return localStorage.getItem('token');\r\n}\r\n\r\nexport function setToken(token) {\r\n  localStorage.setItem('token', token);\r\n}\r\n\r\nexport function removeToken() {\r\n  localStorage.removeItem('token');\r\n}\r\n\r\nexport function getUserName() {\r\n  return localStorage.getItem('userName');\r\n}\r\n\r\nexport function setUserName(name) {\r\n  localStorage.setItem('userName', name);\r\n}\r\n\r\nexport async function loginUser(email, password) {\r\n  return await api.loginUser(email, password);\r\n}\r\n\r\nexport async function registerUser(name, email, password) {\r\n  return await api.registerUser(name, email, password);\r\n}\r\n\r\nexport async function fetchStories(token, page = 1, size = 10, location = 0) {\r\n  return await api.fetchStories(token, page, size, location);\r\n}\r\n\r\nexport async function postStory(token, description, photoFile, lat, lon) {\r\n  return await api.addStory(token, description, photoFile, lat, lon);\r\n}\r\n\r\nexport async function subscribePushNotification(token, subscription) {\r\n  return await api.subscribePushNotification(token, subscription);\r\n}\r\n\r\nexport async function unsubscribePushNotification(token, endpoint) {\r\n  return await api.unsubscribePushNotification(token, endpoint);\r\n}\r\n","import L from 'leaflet';\r\n\r\nconst locationIcon = L.icon({\r\n  iconUrl: '/assets/place_24dp_5985E1.png', // Pastikan ikon sudah tersedia di public/assets\r\n  iconSize: [32, 32],\r\n  iconAnchor: [16, 32],\r\n  popupAnchor: [0, -32],\r\n});\r\n\r\nexport default class AddStoryView {\r\n  constructor(container) {\r\n    if (!container) throw new Error('Container element is required');\r\n    this.container = container;\r\n    this.takenPictures = [];\r\n    this.selectedLocation = { lat: null, lon: null };\r\n    this._stream = null;\r\n    this._map = null;\r\n    this._marker = null;\r\n\r\n    this.onSubmit = null;\r\n    this.onCancel = null;\r\n    this.onTakePhoto = null;\r\n    this.onUploadPhoto = null;\r\n  }\r\n\r\n  render() {\r\n    this.container.innerHTML = `\r\n      <h2 style=\"text-align:center; margin-bottom:20px;\">Tambah Cerita Baru</h2>\r\n      <form id=\"storyForm\" class=\"story-form\" novalidate>\r\n        <div class=\"form-control\">\r\n          <label for=\"title\">Judul Cerita:</label>\r\n          <input type=\"text\" id=\"title\" name=\"title\" placeholder=\"Masukkan judul cerita\" required />\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label for=\"desc\">Deskripsi Cerita:</label>\r\n          <textarea id=\"desc\" name=\"desc\" required placeholder=\"Tuliskan deskripsi cerita Anda...\"></textarea>\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label for=\"date\">Tanggal Cerita:</label>\r\n          <input type=\"date\" id=\"date\" name=\"date\" required value=\"${new Date().toISOString().split('T')[0]}\" />\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label>Ambil Gambar dengan Kamera:</label>\r\n          <video id=\"camera\" autoplay muted playsinline></video>\r\n          <canvas id=\"snapshot\" style=\"display:none;\"></canvas>\r\n          <button type=\"button\" id=\"capture\" class=\"btn btn-outline\">Ambil Foto</button>\r\n          <ul id=\"taken-pictures-list\" class=\"taken-pictures-list\"></ul>\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label>Atau Upload Gambar:</label>\r\n          <input type=\"file\" id=\"fileUpload\" accept=\"image/*\" multiple />\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label>Pilih Lokasi (klik pada peta):</label>\r\n          <div id=\"map\" style=\"height:300px;\"></div>\r\n          <div id=\"location-display\">\r\n            Lokasi dipilih: <span id=\"location-lat\">-</span>, <span id=\"location-lon\">-</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-buttons\">\r\n          <button class=\"btn\" type=\"submit\">Kirim Cerita</button>\r\n          <button type=\"button\" id=\"cancel-button\" class=\"btn btn-outline\">Batal</button>\r\n        </div>\r\n      </form>\r\n    `;\r\n\r\n    this.#bindEvents();\r\n    this.#setupCamera();\r\n    this.#setupMap();\r\n  }\r\n\r\n  #bindEvents() {\r\n    const form = this.container.querySelector('#storyForm');\r\n    const captureBtn = this.container.querySelector('#capture');\r\n    const fileUpload = this.container.querySelector('#fileUpload');\r\n    const cancelBtn = this.container.querySelector('#cancel-button');\r\n    const video = this.container.querySelector('#camera');\r\n    const canvas = this.container.querySelector('#snapshot');\r\n\r\n    form.addEventListener('submit', e => {\r\n      e.preventDefault();\r\n\r\n      if (!form.checkValidity()) {\r\n        form.reportValidity();\r\n        return;\r\n      }\r\n\r\n      if (this.takenPictures.length === 0) {\r\n        alert('Anda harus menambahkan minimal satu gambar.');\r\n        return;\r\n      }\r\n\r\n      const photoFile = this.takenPictures[0];\r\n      if (photoFile.size > 1024 * 1024) {\r\n        alert('Ukuran gambar maksimal 1MB.');\r\n        return;\r\n      }\r\n\r\n      if (this.onSubmit) {\r\n        const title = form.elements['title'].value.trim();\r\n        const description = form.elements['desc'].value.trim();\r\n        const date = form.elements['date'].value;\r\n\r\n        const fullDescription = `${title}\\n\\n${description}\\n\\nTanggal: ${date}`;\r\n\r\n        this.onSubmit(fullDescription, photoFile, this.selectedLocation);\r\n      }\r\n    });\r\n\r\n    cancelBtn.addEventListener('click', () => {\r\n      if (this.onCancel) this.onCancel();\r\n    });\r\n\r\n    captureBtn.addEventListener('click', () => {\r\n      if (!video.videoWidth || !video.videoHeight) {\r\n        alert('Video kamera belum siap.');\r\n        return;\r\n      }\r\n      const context = canvas.getContext('2d');\r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n      canvas.style.display = 'block';\r\n      video.style.display = 'none';\r\n\r\n      canvas.toBlob(blob => {\r\n        if (blob) {\r\n          this.addTakenPicture(blob);\r\n          if (this.onTakePhoto) this.onTakePhoto(blob);\r\n        }\r\n      }, 'image/jpeg');\r\n    });\r\n\r\n    fileUpload.addEventListener('change', e => {\r\n      const files = Array.from(e.target.files);\r\n      files.forEach(file => {\r\n        if (file.type.startsWith('image/')) {\r\n          this.addTakenPicture(file);\r\n          if (this.onUploadPhoto) this.onUploadPhoto(file);\r\n        }\r\n      });\r\n      fileUpload.value = '';\r\n    });\r\n  }\r\n\r\n  #setupCamera() {\r\n    const video = this.container.querySelector('#camera');\r\n\r\n    this.stopCamera();\r\n\r\n    navigator.mediaDevices.getUserMedia({ video: true })\r\n      .then(stream => {\r\n        this._stream = stream;\r\n        video.srcObject = stream;\r\n        video.style.display = 'block';\r\n        const canvas = this.container.querySelector('#snapshot');\r\n        if (canvas) canvas.style.display = 'none';\r\n      })\r\n      .catch(err => {\r\n        console.error('Tidak dapat mengakses kamera', err);\r\n        alert('Akses kamera ditolak atau tidak tersedia.');\r\n      });\r\n  }\r\n\r\n  #setupMap() {\r\n    const defaultLatLng = [-2.5, 117.5];\r\n    this._map = L.map('map').setView(defaultLatLng, 5);\r\n\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: '© OpenStreetMap contributors',\r\n    }).addTo(this._map);\r\n\r\n    this._marker = null;\r\n\r\n    this._map.on('click', e => {\r\n      const { lat, lng } = e.latlng;\r\n      if (this._marker) {\r\n        this._marker.setLatLng(e.latlng);\r\n      } else {\r\n        this._marker = L.marker(e.latlng, { icon: locationIcon }).addTo(this._map);\r\n      }\r\n      this.updateLocation(lat, lng);\r\n    });\r\n  }\r\n\r\n  addTakenPicture(blob) {\r\n    this.takenPictures.push(blob);\r\n    this.#renderTakenPictures();\r\n  }\r\n\r\n  #renderTakenPictures() {\r\n    const list = this.container.querySelector('#taken-pictures-list');\r\n    list.innerHTML = '';\r\n    this.takenPictures.forEach((blob, i) => {\r\n      const li = document.createElement('li');\r\n      li.className = 'taken-pictures-list__item';\r\n\r\n      const img = document.createElement('img');\r\n      img.src = URL.createObjectURL(blob);\r\n      img.alt = `Foto dokumentasi ${i + 1}`;\r\n      img.width = 100;\r\n\r\n      const btnDelete = document.createElement('button');\r\n      btnDelete.type = 'button';\r\n      btnDelete.className = 'delete-picture-btn';\r\n      btnDelete.title = 'Hapus foto ini';\r\n      btnDelete.textContent = '×';\r\n\r\n      btnDelete.addEventListener('click', () => {\r\n        this.takenPictures.splice(i, 1);\r\n        this.#renderTakenPictures();\r\n      });\r\n\r\n      li.appendChild(img);\r\n      li.appendChild(btnDelete);\r\n      list.appendChild(li);\r\n    });\r\n  }\r\n\r\n  updateLocation(lat, lon) {\r\n    this.selectedLocation = { lat, lon };\r\n    this.container.querySelector('#location-lat').textContent = lat?.toFixed(6) || '-';\r\n    this.container.querySelector('#location-lon').textContent = lon?.toFixed(6) || '-';\r\n  }\r\n\r\n  stopCamera() {\r\n    try {\r\n      if (this._stream) {\r\n        this._stream.getTracks().forEach(track => track.stop());\r\n        this._stream = null;\r\n      }\r\n      if (this.container) {\r\n        const video = this.container.querySelector('#camera');\r\n        if (video) {\r\n          video.pause();\r\n          video.srcObject = null;\r\n          video.style.display = 'none';\r\n        }\r\n        const canvas = this.container.querySelector('#snapshot');\r\n        if (canvas) canvas.style.display = 'none';\r\n      }\r\n    } catch (error) {\r\n      console.warn('stopCamera error:', error);\r\n    }\r\n  }\r\n}\r\n","import AddStoryView from '../views/addStoryView.js';\r\nimport * as model from '../model/storyModel.js';\r\nimport { navigateTo } from '../index.js';\r\n\r\nexport default class AddStoryPresenter {\r\n  #view;\r\n\r\n  constructor(container) {\r\n    if (!container) throw new Error('Container element is required');\r\n    this.#view = new AddStoryView(container);\r\n    this.#view.onSubmit = this.handleSubmit.bind(this);\r\n    this.#view.onCancel = this.handleCancel.bind(this);\r\n  }\r\n\r\n  async init() {\r\n    this.#view.render();\r\n  }\r\n\r\n  stopCamera() {\r\n    if (this.#view && typeof this.#view.stopCamera === 'function') {\r\n      this.#view.stopCamera();\r\n    }\r\n  }\r\n\r\n  async handleSubmit(description, photoFile, location) {\r\n    const token = model.getToken();\r\n    if (!token) {\r\n      alert('Anda harus login terlebih dahulu.');\r\n      return;\r\n    }\r\n    try {\r\n      const res = await model.postStory(token, description, photoFile, location.lat, location.lon);\r\n      if (!res.error) {\r\n        alert('Cerita berhasil ditambahkan');\r\n        await navigateTo('#stories');\r\n      } else {\r\n        alert('Gagal menambahkan cerita: ' + res.message);\r\n      }\r\n    } catch (error) {\r\n      alert('Terjadi kesalahan jaringan.');\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  async handleCancel() {\r\n    await navigateTo('#stories');\r\n  }\r\n}\r\n"],"names":["BASE_URL","getToken","localStorage","getItem","setToken","token","setItem","setUserName","name","async","email","password","res","fetch","method","headers","body","JSON","stringify","json","page","size","location","url","URL","searchParams","set","toString","Authorization","postStory","description","photoFile","lat","lon","formData","FormData","append","locationIcon","iconUrl","iconSize","iconAnchor","popupAnchor","AddStoryView","constructor","container","Error","this","takenPictures","selectedLocation","_stream","_map","_marker","onSubmit","onCancel","onTakePhoto","onUploadPhoto","render","innerHTML","Date","toISOString","split","form","querySelector","captureBtn","fileUpload","cancelBtn","video","canvas","addEventListener","e","preventDefault","checkValidity","reportValidity","length","alert","fullDescription","elements","value","trim","videoWidth","videoHeight","context","getContext","width","height","drawImage","style","display","toBlob","blob","addTakenPicture","Array","from","target","files","forEach","file","type","startsWith","stopCamera","navigator","mediaDevices","getUserMedia","then","stream","srcObject","catch","err","console","error","setView","attribution","addTo","on","lng","latlng","setLatLng","icon","updateLocation","push","list","i","li","document","createElement","className","img","src","createObjectURL","alt","btnDelete","title","textContent","splice","appendChild","toFixed","getTracks","track","stop","pause","warn","AddStoryPresenter","handleSubmit","bind","handleCancel","init","message"],"sourceRoot":""}