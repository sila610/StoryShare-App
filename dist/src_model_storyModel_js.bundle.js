"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkceritaapp"] = self["webpackChunkceritaapp"] || []).push([["src_model_storyModel_js"],{

/***/ "./src/api/api.js":
/*!************************!*\
  !*** ./src/api/api.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addStory: () => (/* binding */ addStory),\n/* harmony export */   addStoryGuest: () => (/* binding */ addStoryGuest),\n/* harmony export */   fetchStories: () => (/* binding */ fetchStories),\n/* harmony export */   loginUser: () => (/* binding */ loginUser),\n/* harmony export */   registerUser: () => (/* binding */ registerUser),\n/* harmony export */   sendNotification: () => (/* binding */ sendNotification),\n/* harmony export */   subscribePushNotification: () => (/* binding */ subscribePushNotification),\n/* harmony export */   unsubscribePushNotification: () => (/* binding */ unsubscribePushNotification)\n/* harmony export */ });\nconst BASE_URL = 'https://story-api.dicoding.dev/v1';\r\n\r\nasync function registerUser(name, email, password) {\r\n  const res = await fetch(`${BASE_URL}/register`, {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({ name, email, password }),\r\n  });\r\n  return await res.json();\r\n}\r\n\r\nasync function loginUser(email, password) {\r\n  const res = await fetch(`${BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({ email, password }),\r\n  });\r\n  return await res.json();\r\n}\r\n\r\nasync function fetchStories(token, page = 1, size = 10, location = 0) {\r\n  const url = new URL(`${BASE_URL}/stories`);\r\n  url.searchParams.set('page', page);\r\n  url.searchParams.set('size', size);\r\n  url.searchParams.set('location', location);\r\n\r\n  const res = await fetch(url.toString(), {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  return await res.json();\r\n}\r\n\r\nasync function addStory(token, description, photoFile, lat = null, lon = null) {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append('description', description);\r\n    formData.append('photo', photoFile);\r\n    if (lat !== null) formData.append('lat', lat);\r\n    if (lon !== null) formData.append('lon', lon);\r\n\r\n    const res = await fetch(`${BASE_URL}/stories`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: formData,\r\n    });\r\n    \r\n    const responseJson = await res.json();\r\n    \r\n    // Log respons untuk debugging\r\n    console.log('API response:', responseJson);\r\n    \r\n    return responseJson;\r\n  } catch (error) {\r\n    console.error('Network error when adding story:', error);\r\n    return { \r\n      error: true, \r\n      message: error.message || 'Terjadi kesalahan jaringan'\r\n    };\r\n  }\r\n}\r\n\r\nasync function addStoryGuest(description, photoFile, lat = null, lon = null) {\r\n  const formData = new FormData();\r\n  formData.append('description', description);\r\n  formData.append('photo', photoFile);\r\n  if (lat !== null) formData.append('lat', lat);\r\n  if (lon !== null) formData.append('lon', lon);\r\n\r\n  const res = await fetch(`${BASE_URL}/stories/guest`, {\r\n    method: 'POST',\r\n    body: formData,\r\n  });\r\n  return await res.json();\r\n}\r\n\r\nasync function subscribePushNotification(token, subscription) {\r\n  console.log('Sending subscription to server:', { token, subscription });\r\n  \r\n  // Kirim hanya bagian penting subscription ke server\r\n  const filteredSubscription = {\r\n    endpoint: subscription.endpoint,\r\n    keys: {\r\n      p256dh: subscription.keys.p256dh,\r\n      auth: subscription.keys.auth,\r\n    },\r\n  };\r\n\r\n  try {\r\n    console.log('Filtered subscription data:', filteredSubscription);\r\n    const res = await fetch(`${BASE_URL}/notifications/subscribe`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(filteredSubscription),\r\n    });\r\n    \r\n    if (!res.ok) {\r\n      console.error('Server returned error status:', res.status);\r\n      const errorText = await res.text();\r\n      console.error('Error response:', errorText);\r\n      try {\r\n        return JSON.parse(errorText);\r\n      } catch (e) {\r\n        return { error: true, message: `Server error: ${res.status} ${res.statusText}` };\r\n      }\r\n    }\r\n    \r\n    const data = await res.json();\r\n    console.log('Server response for subscription:', data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error subscribing to push notification:', error);\r\n    return { error: true, message: error.message };\r\n  }\r\n}\r\n\r\nasync function unsubscribePushNotification(token, endpoint) {\r\n  console.log('Sending unsubscribe request to server:', { token, endpoint });\r\n  \r\n  try {\r\n    const res = await fetch(`${BASE_URL}/notifications/subscribe`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({ endpoint }),\r\n    });\r\n    \r\n    if (!res.ok) {\r\n      console.error('Server returned error status:', res.status);\r\n      const errorText = await res.text();\r\n      console.error('Error response:', errorText);\r\n      try {\r\n        return JSON.parse(errorText);\r\n      } catch (e) {\r\n        return { error: true, message: `Server error: ${res.status} ${res.statusText}` };\r\n      }\r\n    }\r\n    \r\n    const data = await res.json();\r\n    console.log('Server response for unsubscription:', data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error unsubscribing from push notification:', error);\r\n    return { error: true, message: error.message };\r\n  }\r\n}\r\n\r\nasync function sendNotification(reportId, token) {\r\n  const res = await fetch(`${BASE_URL}/notifications/send`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({ reportId }),\r\n  });\r\n  return await res.json();\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/api/api.js\n");

/***/ }),

/***/ "./src/config.js":
/*!***********************!*\
  !*** ./src/config.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BASE_URL: () => (/* binding */ BASE_URL),\n/* harmony export */   DB_NAME: () => (/* binding */ DB_NAME),\n/* harmony export */   DB_VERSION: () => (/* binding */ DB_VERSION),\n/* harmony export */   OBJECT_STORE_NAME: () => (/* binding */ OBJECT_STORE_NAME),\n/* harmony export */   VAPID_PUBLIC_KEY: () => (/* binding */ VAPID_PUBLIC_KEY)\n/* harmony export */ });\n// Konfigurasi aplikasi\r\n\r\n// Base URL API\r\nconst BASE_URL = 'https://story-api.dicoding.dev/v1';\r\n\r\n// VAPID key untuk push notification - Gunakan VAPID key yang valid\r\nconst VAPID_PUBLIC_KEY = 'BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk';\r\n\r\n// Konfigurasi IndexedDB\r\nconst DB_NAME = 'story-app-db';\r\nconst DB_VERSION = 1;\r\nconst OBJECT_STORE_NAME = 'stories';\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29uZmlnLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2VyaXRhYXBwLy4vc3JjL2NvbmZpZy5qcz9kYjQ5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEtvbmZpZ3VyYXNpIGFwbGlrYXNpXHJcblxyXG4vLyBCYXNlIFVSTCBBUElcclxuZXhwb3J0IGNvbnN0IEJBU0VfVVJMID0gJ2h0dHBzOi8vc3RvcnktYXBpLmRpY29kaW5nLmRldi92MSc7XHJcblxyXG4vLyBWQVBJRCBrZXkgdW50dWsgcHVzaCBub3RpZmljYXRpb24gLSBHdW5ha2FuIFZBUElEIGtleSB5YW5nIHZhbGlkXHJcbmV4cG9ydCBjb25zdCBWQVBJRF9QVUJMSUNfS0VZID0gJ0JDQ3MyZW9uTUktNkgyY3R2RmFXZy1VWWREdjM4N1Zub19ielV6QUxwQjQ0MnIybENuc0htdHJ4OGJpeVBpX0UtMWZTR0FCS19Rc19HbHZQb0pKcXhiayc7XHJcblxyXG4vLyBLb25maWd1cmFzaSBJbmRleGVkREJcclxuZXhwb3J0IGNvbnN0IERCX05BTUUgPSAnc3RvcnktYXBwLWRiJztcclxuZXhwb3J0IGNvbnN0IERCX1ZFUlNJT04gPSAxO1xyXG5leHBvcnQgY29uc3QgT0JKRUNUX1NUT1JFX05BTUUgPSAnc3Rvcmllcyc7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/config.js\n");

/***/ }),

/***/ "./src/model/storyModel.js":
/*!*********************************!*\
  !*** ./src/model/storyModel.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchStories: () => (/* binding */ fetchStories),\n/* harmony export */   getToken: () => (/* binding */ getToken),\n/* harmony export */   getUserName: () => (/* binding */ getUserName),\n/* harmony export */   loginUser: () => (/* binding */ loginUser),\n/* harmony export */   postStory: () => (/* binding */ postStory),\n/* harmony export */   registerUser: () => (/* binding */ registerUser),\n/* harmony export */   removeToken: () => (/* binding */ removeToken),\n/* harmony export */   setToken: () => (/* binding */ setToken),\n/* harmony export */   setUserName: () => (/* binding */ setUserName),\n/* harmony export */   subscribePushNotification: () => (/* binding */ subscribePushNotification),\n/* harmony export */   unsubscribePushNotification: () => (/* binding */ unsubscribePushNotification)\n/* harmony export */ });\n/* harmony import */ var _api_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api/api.js */ \"./src/api/api.js\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config.js */ \"./src/config.js\");\n/* harmony import */ var _utils_database_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/database.js */ \"./src/utils/database.js\");\n\r\n\r\n\r\n\r\nfunction getToken() {\r\n  return localStorage.getItem('token');\r\n}\r\n\r\nfunction setToken(token) {\r\n  localStorage.setItem('token', token);\r\n}\r\n\r\nfunction removeToken() {\r\n  localStorage.removeItem('token');\r\n}\r\n\r\nfunction getUserName() {\r\n  return localStorage.getItem('userName');\r\n}\r\n\r\nfunction setUserName(name) {\r\n  localStorage.setItem('userName', name);\r\n}\r\n\r\nasync function loginUser(email, password) {\r\n  return await _api_api_js__WEBPACK_IMPORTED_MODULE_0__.loginUser(email, password);\r\n}\r\n\r\nasync function registerUser(name, email, password) {\r\n  return await _api_api_js__WEBPACK_IMPORTED_MODULE_0__.registerUser(name, email, password);\r\n}\r\n\r\nasync function fetchStories(token, page = 1, size = 10, location = 0) {\r\n  try {\r\n    // Cek koneksi internet\r\n    const isOnline = navigator.onLine;\r\n    console.log('Online status in fetchStories:', isOnline);\r\n    \r\n    // Jika offline, coba ambil dari IndexedDB\r\n    if (!isOnline) {\r\n      console.log('Offline mode: Fetching stories from IndexedDB');\r\n      const stories = await (0,_utils_database_js__WEBPACK_IMPORTED_MODULE_2__.getStoriesFromDB)();\r\n      if (stories && stories.length > 0) {\r\n        console.log('Stories found in IndexedDB:', stories.length);\r\n        return { \r\n          error: false,\r\n          message: 'Menampilkan data dari penyimpanan lokal (offline mode)',\r\n          listStory: stories \r\n        };\r\n      }\r\n      console.log('No stories found in IndexedDB');\r\n      return { \r\n        error: false,\r\n        message: 'Tidak ada data tersimpan untuk mode offline',\r\n        listStory: [] \r\n      };\r\n    }\r\n    \r\n    // Jika online atau tidak ada data di IndexedDB, ambil dari API\r\n    const url = `${_config_js__WEBPACK_IMPORTED_MODULE_1__.BASE_URL}/stories?page=${page}&size=${size}&location=${location}`;\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    };\r\n\r\n    const response = await fetch(url, options);\r\n    const responseJson = await response.json();\r\n\r\n    if (responseJson.error) {\r\n      throw new Error(responseJson.message);\r\n    }\r\n\r\n    // Simpan ke IndexedDB untuk penggunaan offline\r\n    if (responseJson.listStory && responseJson.listStory.length > 0) {\r\n      console.log('Saving stories to IndexedDB');\r\n      await Promise.all(responseJson.listStory.map(story => {\r\n        // Pastikan URL gambar disimpan dengan benar\r\n        if (story.photoUrl) {\r\n          // URL gambar sudah ada, gunakan apa adanya\r\n          return (0,_utils_database_js__WEBPACK_IMPORTED_MODULE_2__.saveStoryToDB)(story);\r\n        } else if (story.photoUrl === undefined && story.photo) {\r\n          // Jika photoUrl tidak ada tapi photo ada, gunakan photo sebagai photoUrl\r\n          story.photoUrl = story.photo;\r\n          return (0,_utils_database_js__WEBPACK_IMPORTED_MODULE_2__.saveStoryToDB)(story);\r\n        } else {\r\n          // Jika tidak ada URL gambar, gunakan placeholder\r\n          story.photoUrl = '/assets/place_24dp_5985E1.png';\r\n          return (0,_utils_database_js__WEBPACK_IMPORTED_MODULE_2__.saveStoryToDB)(story);\r\n        }\r\n      }));\r\n    }\r\n\r\n    return responseJson;\r\n  } catch (error) {\r\n    console.error('Error fetching stories:', error);\r\n    \r\n    // Jika gagal fetch dan offline, coba ambil dari IndexedDB\r\n    if (!navigator.onLine) {\r\n      console.log('Offline mode: Trying to get stories from IndexedDB after fetch failure');\r\n      const stories = await (0,_utils_database_js__WEBPACK_IMPORTED_MODULE_2__.getStoriesFromDB)();\r\n      if (stories && stories.length > 0) {\r\n        console.log('Stories found in IndexedDB after fetch failure:', stories.length);\r\n        return { \r\n          error: false,\r\n          message: 'Menampilkan data dari penyimpanan lokal (offline mode)',\r\n          listStory: stories \r\n        };\r\n      }\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function postStory(token, description, photoFile, lat, lon) {\r\n  try {\r\n    const response = await _api_api_js__WEBPACK_IMPORTED_MODULE_0__.addStory(token, description, photoFile, lat, lon);\r\n    \r\n    // Jika berhasil, tambahkan properti story dengan data cerita yang baru ditambahkan\r\n    if (!response.error) {\r\n      response.story = {\r\n        id: response.id || `story-${Date.now()}`, // Gunakan ID dari respons atau buat ID sementara\r\n        name: getUserName() || 'Anda',\r\n        description: description,\r\n        photoUrl: URL.createObjectURL(photoFile),\r\n        createdAt: new Date().toISOString(),\r\n        lat: lat,\r\n        lon: lon\r\n      };\r\n    }\r\n    \r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error posting story:', error);\r\n    return { error: true, message: error.message || 'Terjadi kesalahan jaringan' };\r\n  }\r\n}\r\n\r\nasync function subscribePushNotification(token, subscription) {\r\n  return await _api_api_js__WEBPACK_IMPORTED_MODULE_0__.subscribePushNotification(token, subscription);\r\n}\r\n\r\nasync function unsubscribePushNotification(token, endpoint) {\r\n  return await _api_api_js__WEBPACK_IMPORTED_MODULE_0__.unsubscribePushNotification(token, endpoint);\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/model/storyModel.js\n");

/***/ }),

/***/ "./src/utils/database.js":
/*!*******************************!*\
  !*** ./src/utils/database.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteStoryFromDB: () => (/* binding */ deleteStoryFromDB),\n/* harmony export */   getStoriesFromDB: () => (/* binding */ getStoriesFromDB),\n/* harmony export */   isDatabaseAvailable: () => (/* binding */ isDatabaseAvailable),\n/* harmony export */   saveStoryToDB: () => (/* binding */ saveStoryToDB)\n/* harmony export */ });\n/* harmony import */ var idb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! idb */ \"./node_modules/idb/build/index.js\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config.js */ \"./src/config.js\");\n\r\n\r\n\r\n// Buka database\r\nconst dbPromise = (0,idb__WEBPACK_IMPORTED_MODULE_0__.openDB)(_config_js__WEBPACK_IMPORTED_MODULE_1__.DB_NAME, _config_js__WEBPACK_IMPORTED_MODULE_1__.DB_VERSION, {\r\n  upgrade(database) {\r\n    // Buat object store jika belum ada\r\n    if (!database.objectStoreNames.contains(_config_js__WEBPACK_IMPORTED_MODULE_1__.OBJECT_STORE_NAME)) {\r\n      database.createObjectStore(_config_js__WEBPACK_IMPORTED_MODULE_1__.OBJECT_STORE_NAME, { keyPath: 'id' });\r\n      console.log(`Object store ${_config_js__WEBPACK_IMPORTED_MODULE_1__.OBJECT_STORE_NAME} berhasil dibuat`);\r\n    }\r\n  },\r\n});\r\n\r\n// Simpan cerita ke database\r\nasync function saveStoryToDB(story) {\r\n  if (!story || !story.id) {\r\n    console.error('Invalid story object:', story);\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    const db = await dbPromise;\r\n    const tx = db.transaction(_config_js__WEBPACK_IMPORTED_MODULE_1__.OBJECT_STORE_NAME, 'readwrite');\r\n    const store = tx.objectStore(_config_js__WEBPACK_IMPORTED_MODULE_1__.OBJECT_STORE_NAME);\r\n    \r\n    // Cek apakah cerita sudah ada\r\n    const existingStory = await store.get(story.id);\r\n    \r\n    // Jika sudah ada dan memiliki properti saved, pertahankan nilai saved\r\n    if (existingStory && existingStory.saved !== undefined) {\r\n      // Hanya update saved jika nilai baru diberikan\r\n      if (story.saved !== undefined) {\r\n        existingStory.saved = story.saved;\r\n      }\r\n      // Gabungkan properti lain dari cerita baru\r\n      Object.assign(existingStory, story);\r\n      await store.put(existingStory);\r\n    } else {\r\n      // Jika belum ada, simpan cerita baru\r\n      await store.put(story);\r\n    }\r\n    \r\n    await tx.done;\r\n    console.log('Story saved to IndexedDB:', story.id);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error saving story to IndexedDB:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// Ambil semua cerita dari database\r\nasync function getStoriesFromDB() {\r\n  try {\r\n    const db = await dbPromise;\r\n    const tx = db.transaction(_config_js__WEBPACK_IMPORTED_MODULE_1__.OBJECT_STORE_NAME, 'readonly');\r\n    const store = tx.objectStore(_config_js__WEBPACK_IMPORTED_MODULE_1__.OBJECT_STORE_NAME);\r\n    const stories = await store.getAll();\r\n    await tx.done;\r\n    console.log('Stories retrieved from IndexedDB:', stories.length);\r\n    return stories;\r\n  } catch (error) {\r\n    console.error('Error getting stories from IndexedDB:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\n// Hapus cerita dari database\r\nasync function deleteStoryFromDB(id) {\r\n  try {\r\n    const db = await dbPromise;\r\n    const tx = db.transaction(_config_js__WEBPACK_IMPORTED_MODULE_1__.OBJECT_STORE_NAME, 'readwrite');\r\n    const store = tx.objectStore(_config_js__WEBPACK_IMPORTED_MODULE_1__.OBJECT_STORE_NAME);\r\n    await store.delete(id);\r\n    await tx.done;\r\n    console.log('Story deleted from IndexedDB:', id);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error deleting story from IndexedDB:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// Cek apakah database tersedia\r\nasync function isDatabaseAvailable() {\r\n  if (!('indexedDB' in window)) {\r\n    console.log('IndexedDB not supported');\r\n    return false;\r\n  }\r\n  \r\n  try {\r\n    const db = await dbPromise;\r\n    return !!db;\r\n  } catch (error) {\r\n    console.error('Error checking database availability:', error);\r\n    return false;\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvZGF0YWJhc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTZCO0FBQ3lDO0FBQ3RFO0FBQ0E7QUFDQSxrQkFBa0IsMkNBQU0sQ0FBQywrQ0FBTyxFQUFFLGtEQUFVO0FBQzVDO0FBQ0E7QUFDQSw0Q0FBNEMseURBQWlCO0FBQzdELGlDQUFpQyx5REFBaUIsSUFBSSxlQUFlO0FBQ3JFLGtDQUFrQyx5REFBaUIsRUFBRTtBQUNyRDtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0Q7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIseURBQWlCO0FBQy9DLGlDQUFpQyx5REFBaUI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsOEJBQThCLHlEQUFpQjtBQUMvQyxpQ0FBaUMseURBQWlCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLDhCQUE4Qix5REFBaUI7QUFDL0MsaUNBQWlDLHlEQUFpQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZXJpdGFhcHAvLi9zcmMvdXRpbHMvZGF0YWJhc2UuanM/ZDMzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBvcGVuREIgfSBmcm9tICdpZGInO1xyXG5pbXBvcnQgeyBEQl9OQU1FLCBEQl9WRVJTSU9OLCBPQkpFQ1RfU1RPUkVfTkFNRSB9IGZyb20gJy4uL2NvbmZpZy5qcyc7XHJcblxyXG4vLyBCdWthIGRhdGFiYXNlXHJcbmNvbnN0IGRiUHJvbWlzZSA9IG9wZW5EQihEQl9OQU1FLCBEQl9WRVJTSU9OLCB7XHJcbiAgdXBncmFkZShkYXRhYmFzZSkge1xyXG4gICAgLy8gQnVhdCBvYmplY3Qgc3RvcmUgamlrYSBiZWx1bSBhZGFcclxuICAgIGlmICghZGF0YWJhc2Uub2JqZWN0U3RvcmVOYW1lcy5jb250YWlucyhPQkpFQ1RfU1RPUkVfTkFNRSkpIHtcclxuICAgICAgZGF0YWJhc2UuY3JlYXRlT2JqZWN0U3RvcmUoT0JKRUNUX1NUT1JFX05BTUUsIHsga2V5UGF0aDogJ2lkJyB9KTtcclxuICAgICAgY29uc29sZS5sb2coYE9iamVjdCBzdG9yZSAke09CSkVDVF9TVE9SRV9OQU1FfSBiZXJoYXNpbCBkaWJ1YXRgKTtcclxuICAgIH1cclxuICB9LFxyXG59KTtcclxuXHJcbi8vIFNpbXBhbiBjZXJpdGEga2UgZGF0YWJhc2VcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNhdmVTdG9yeVRvREIoc3RvcnkpIHtcclxuICBpZiAoIXN0b3J5IHx8ICFzdG9yeS5pZCkge1xyXG4gICAgY29uc29sZS5lcnJvcignSW52YWxpZCBzdG9yeSBvYmplY3Q6Jywgc3RvcnkpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICBcclxuICB0cnkge1xyXG4gICAgY29uc3QgZGIgPSBhd2FpdCBkYlByb21pc2U7XHJcbiAgICBjb25zdCB0eCA9IGRiLnRyYW5zYWN0aW9uKE9CSkVDVF9TVE9SRV9OQU1FLCAncmVhZHdyaXRlJyk7XHJcbiAgICBjb25zdCBzdG9yZSA9IHR4Lm9iamVjdFN0b3JlKE9CSkVDVF9TVE9SRV9OQU1FKTtcclxuICAgIFxyXG4gICAgLy8gQ2VrIGFwYWthaCBjZXJpdGEgc3VkYWggYWRhXHJcbiAgICBjb25zdCBleGlzdGluZ1N0b3J5ID0gYXdhaXQgc3RvcmUuZ2V0KHN0b3J5LmlkKTtcclxuICAgIFxyXG4gICAgLy8gSmlrYSBzdWRhaCBhZGEgZGFuIG1lbWlsaWtpIHByb3BlcnRpIHNhdmVkLCBwZXJ0YWhhbmthbiBuaWxhaSBzYXZlZFxyXG4gICAgaWYgKGV4aXN0aW5nU3RvcnkgJiYgZXhpc3RpbmdTdG9yeS5zYXZlZCAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIC8vIEhhbnlhIHVwZGF0ZSBzYXZlZCBqaWthIG5pbGFpIGJhcnUgZGliZXJpa2FuXHJcbiAgICAgIGlmIChzdG9yeS5zYXZlZCAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgZXhpc3RpbmdTdG9yeS5zYXZlZCA9IHN0b3J5LnNhdmVkO1xyXG4gICAgICB9XHJcbiAgICAgIC8vIEdhYnVuZ2thbiBwcm9wZXJ0aSBsYWluIGRhcmkgY2VyaXRhIGJhcnVcclxuICAgICAgT2JqZWN0LmFzc2lnbihleGlzdGluZ1N0b3J5LCBzdG9yeSk7XHJcbiAgICAgIGF3YWl0IHN0b3JlLnB1dChleGlzdGluZ1N0b3J5KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIEppa2EgYmVsdW0gYWRhLCBzaW1wYW4gY2VyaXRhIGJhcnVcclxuICAgICAgYXdhaXQgc3RvcmUucHV0KHN0b3J5KTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgYXdhaXQgdHguZG9uZTtcclxuICAgIGNvbnNvbGUubG9nKCdTdG9yeSBzYXZlZCB0byBJbmRleGVkREI6Jywgc3RvcnkuaWQpO1xyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHNhdmluZyBzdG9yeSB0byBJbmRleGVkREI6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxufVxyXG5cclxuLy8gQW1iaWwgc2VtdWEgY2VyaXRhIGRhcmkgZGF0YWJhc2VcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFN0b3JpZXNGcm9tREIoKSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IGRiID0gYXdhaXQgZGJQcm9taXNlO1xyXG4gICAgY29uc3QgdHggPSBkYi50cmFuc2FjdGlvbihPQkpFQ1RfU1RPUkVfTkFNRSwgJ3JlYWRvbmx5Jyk7XHJcbiAgICBjb25zdCBzdG9yZSA9IHR4Lm9iamVjdFN0b3JlKE9CSkVDVF9TVE9SRV9OQU1FKTtcclxuICAgIGNvbnN0IHN0b3JpZXMgPSBhd2FpdCBzdG9yZS5nZXRBbGwoKTtcclxuICAgIGF3YWl0IHR4LmRvbmU7XHJcbiAgICBjb25zb2xlLmxvZygnU3RvcmllcyByZXRyaWV2ZWQgZnJvbSBJbmRleGVkREI6Jywgc3Rvcmllcy5sZW5ndGgpO1xyXG4gICAgcmV0dXJuIHN0b3JpZXM7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGdldHRpbmcgc3RvcmllcyBmcm9tIEluZGV4ZWREQjonLCBlcnJvcik7XHJcbiAgICByZXR1cm4gW107XHJcbiAgfVxyXG59XHJcblxyXG4vLyBIYXB1cyBjZXJpdGEgZGFyaSBkYXRhYmFzZVxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGVsZXRlU3RvcnlGcm9tREIoaWQpIHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgZGIgPSBhd2FpdCBkYlByb21pc2U7XHJcbiAgICBjb25zdCB0eCA9IGRiLnRyYW5zYWN0aW9uKE9CSkVDVF9TVE9SRV9OQU1FLCAncmVhZHdyaXRlJyk7XHJcbiAgICBjb25zdCBzdG9yZSA9IHR4Lm9iamVjdFN0b3JlKE9CSkVDVF9TVE9SRV9OQU1FKTtcclxuICAgIGF3YWl0IHN0b3JlLmRlbGV0ZShpZCk7XHJcbiAgICBhd2FpdCB0eC5kb25lO1xyXG4gICAgY29uc29sZS5sb2coJ1N0b3J5IGRlbGV0ZWQgZnJvbSBJbmRleGVkREI6JywgaWQpO1xyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGRlbGV0aW5nIHN0b3J5IGZyb20gSW5kZXhlZERCOicsIGVycm9yKTtcclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9XHJcbn1cclxuXHJcbi8vIENlayBhcGFrYWggZGF0YWJhc2UgdGVyc2VkaWFcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGlzRGF0YWJhc2VBdmFpbGFibGUoKSB7XHJcbiAgaWYgKCEoJ2luZGV4ZWREQicgaW4gd2luZG93KSkge1xyXG4gICAgY29uc29sZS5sb2coJ0luZGV4ZWREQiBub3Qgc3VwcG9ydGVkJyk7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG4gIFxyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBkYiA9IGF3YWl0IGRiUHJvbWlzZTtcclxuICAgIHJldHVybiAhIWRiO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjaGVja2luZyBkYXRhYmFzZSBhdmFpbGFiaWxpdHk6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utils/database.js\n");

/***/ })

}]);