"use strict";(self.webpackChunkceritaapp=self.webpackChunkceritaapp||[]).push([[223],{82:(t,n,a)=>{a.d(n,{kp:()=>l,gf:()=>i,Lx:()=>s,y_:()=>d,DY:()=>c,WG:()=>r,ht:()=>o});const e="https://story-api.dicoding.dev/v1";function i(){return localStorage.getItem("token")}function r(t){localStorage.setItem("token",t)}function o(t){localStorage.setItem("userName",t)}async function s(t,n){return await async function(t,n){const a=await fetch(`${e}/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:t,password:n})});return await a.json()}(t,n)}async function c(t,n,a){return await async function(t,n,a){const i=await fetch(`${e}/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:t,email:n,password:a})});return await i.json()}(t,n,a)}async function l(t,n=1,a=10,i=0){return await async function(t,n=1,a=10,i=0){const r=new URL(`${e}/stories`);r.searchParams.set("page",n),r.searchParams.set("size",a),r.searchParams.set("location",i);const o=await fetch(r.toString(),{headers:{Authorization:`Bearer ${t}`}});return await o.json()}(t,n,a,i)}async function d(t,n,a,i,r){return await async function(t,n,a,i=null,r=null){const o=new FormData;o.append("description",n),o.append("photo",a),null!==i&&o.append("lat",i),null!==r&&o.append("lon",r);const s=await fetch(`${e}/stories`,{method:"POST",headers:{Authorization:`Bearer ${t}`},body:o});return await s.json()}(t,n,a,i,r)}},223:(t,n,a)=>{a.r(n),a.d(n,{default:()=>f});var e=a(82),i=a(481),r=a.n(i);a(389);const o=r().icon({iconUrl:"/assets/place_24dp_5985E1.png",iconSize:[32,32],iconAnchor:[16,32],popupAnchor:[0,-32]});let s=null,c=null;var l=a(602);const d="stories",u=(0,l.P2)("storyshare-db",1,{upgrade(t){t.objectStoreNames.contains(d)||t.createObjectStore(d,{keyPath:"id"})}}),p=async t=>{const n=await u;return console.log("Menyimpan cerita ke IndexedDB:",t),t.id||(t.id=Date.now()),n.put(d,t)},h=async()=>{const t=await u,n=await t.getAll(d);return console.log("Cerita yang diambil dari IndexedDB:",n),n};class g{constructor(t){this.container=t}async init(){await this.loadAndRenderStories(),await this.#t()}async loadAndRenderStories(){const t=e.gf();if(console.log("Token:",t),t){this.container.innerHTML="<h2>Loading...</h2>";try{let n=await h();if(n.length>0)this.renderStories(n);else{const n=await e.kp(t,1,10,1);if(!n||!n.listStory||0===n.listStory.length)return void(this.container.innerHTML="<p>Gagal memuat cerita: Tidak ada cerita yang ditemukan.</p>");n.listStory.forEach((t=>p(t))),this.renderStories(n.listStory)}}catch(t){this.container.innerHTML=`<p>Terjadi kesalahan saat memuat cerita: ${t.message}</p>`,console.error(t)}}else this.container.innerHTML="<p>Anda harus login terlebih dahulu untuk melihat cerita.</p>"}renderStories(t){const n=t.map((t=>function(t){const n=t.photoUrl||"/assets/place_24dp_5985E1.png",a=t.createdAt?new Date(t.createdAt).toLocaleDateString():"Tanggal tidak tersedia",e=!0===t.saved;return`\n    <div class="story-card" tabindex="0" data-id="${t.id}">\n      <img src="${n}" alt="Gambar cerita oleh ${t.name||"Anonim"}" />\n      <h3>${t.name||"Anonim"}</h3>\n      <p>${t.description||"-"}</p>\n      <p><small>${a}</small></p>\n      <button class="save-btn" data-id="${t.id}" ${e?"disabled":""}>\n        ${e?"Tersimpan":"Simpan"}\n      </button>\n      ${e?`<button class="delete-btn" data-id="${t.id}">Hapus</button>`:""}\n    </div>\n  `}(t))).join("");this.container.innerHTML=`\n      <section style="text-align: center; margin-bottom: 24px;">\n        <h2>Selamat Datang di StoryShare App!</h2>\n        <p>Bagikan kisah unik dan pengalaman Anda ...</p>\n      </section>\n\n      <h2 style="text-align: center; font-size: 28px; font-weight: 700;">Daftar Cerita</h2>\n      <div class="story-list">${n}</div>\n      <div id="map" style="height: 400px; margin-top: 20px;"></div>\n      <div id="notification-container" style="text-align: center; margin-top: 20px;">\n        <button id="btn-push-toggle" class="btn">Loading...</button>\n      </div>\n    `,function(t,n){const a=document.querySelectorAll(".save-btn"),e=document.querySelectorAll(".delete-btn");a.forEach((n=>{const a=n.getAttribute("data-id");a&&"function"==typeof t&&n.addEventListener("click",(()=>{t(a)}))})),e.forEach((t=>{const a=t.getAttribute("data-id");a&&"function"==typeof n&&t.addEventListener("click",(()=>{n(a)}))}))}(this.handleSaveBookmark.bind(this),this.deleteStory.bind(this)),function(t){s&&(s.remove(),s=null,c=null),s=r().map("map").setView([-2.5,117.5],5),r().tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"Â© OpenStreetMap contributors"}).addTo(s),c=r().markerClusterGroup(),t.forEach((t=>{if(null!==t.lat&&null!==t.lon){const n=r().marker([t.lat,t.lon],{icon:o});n.bindPopup(`\n        <strong>${t.name||"Anonim"}</strong><br>\n        ${t.description||"-"}\n      `),c.addLayer(n)}})),s.addLayer(c)}(t)}async#t(){const t=this.container.querySelector("#btn-push-toggle");if(!t)return;if(!e.gf())return t.textContent="Anda harus login untuk notifikasi",void(t.disabled=!0);const n=await async function(){if(!("serviceWorker"in navigator))return!1;const t=await navigator.serviceWorker.getRegistration();return!!t&&null!==await t.pushManager.getSubscription()}();t.textContent=n?"Unsubscribe Push Notification":"Subscribe Push Notification",t.disabled=!1,t.onclick=async()=>{t.disabled=!0;try{n?(await async function(){const t=await navigator.serviceWorker.getRegistration();if(!t)return void alert("Service Worker belum terdaftar.");const n=await t.pushManager.getSubscription();if(n)try{await n.unsubscribe(),console.log("Berhasil unsubscribe")}catch(t){console.error("Gagal unsubscribe:",t),alert("Gagal berhenti berlangganan push notification.")}else alert("Anda belum berlangganan notifikasi.")}(),alert("Berhasil berhenti berlangganan notifikasi!")):(await async function(){if(!("Notification"in window))return void alert("Browser tidak mendukung notifikasi.");let t=Notification.permission;if("default"===t&&(t=await Notification.requestPermission()),"granted"!==t)return void alert("Izin notifikasi tidak diberikan.");const n=await navigator.serviceWorker.getRegistration();if(n)try{const t=await n.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:"your-vapid-public-key"});console.log("Berhasil subscribe push notification:",t)}catch(t){console.error("Gagal subscribe:",t),alert("Gagal berlangganan push notification.")}else alert("Service Worker belum terdaftar.")}(),alert("Berhasil berlangganan push notification!"))}catch(t){alert("Gagal mengubah langganan notifikasi."),console.error(t)}await this.#t()}}async handleSaveBookmark(t){const n=(await h()).find((n=>n.id===t));n&&(n.saved=!0,await p(n),alert("Cerita berhasil disimpan ke bookmark!"),await this.loadAndRenderStories())}async deleteStory(t){await(async t=>(await u).delete(d,t))(t),alert("Cerita berhasil dihapus!"),await this.loadAndRenderStories()}}async function f(t){const n=new g(t);await n.init()}}}]);
//# sourceMappingURL=223.77573b5da9c7c0568ac4.bundle.js.map