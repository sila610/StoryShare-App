"use strict";(self.webpackChunkceritaapp=self.webpackChunkceritaapp||[]).push([[947],{82:(t,n,e)=>{e.d(n,{kp:()=>c,gf:()=>o,Lx:()=>r,y_:()=>u,DY:()=>l,WG:()=>s,ht:()=>i});const a="https://story-api.dicoding.dev/v1";function o(){return localStorage.getItem("token")}function s(t){localStorage.setItem("token",t)}function i(t){localStorage.setItem("userName",t)}async function r(t,n){return await async function(t,n){const e=await fetch(`${a}/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:t,password:n})});return await e.json()}(t,n)}async function l(t,n,e){return await async function(t,n,e){const o=await fetch(`${a}/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:t,email:n,password:e})});return await o.json()}(t,n,e)}async function c(t,n=1,e=10,o=0){return await async function(t,n=1,e=10,o=0){const s=new URL(`${a}/stories`);s.searchParams.set("page",n),s.searchParams.set("size",e),s.searchParams.set("location",o);const i=await fetch(s.toString(),{headers:{Authorization:`Bearer ${t}`}});return await i.json()}(t,n,e,o)}async function u(t,n,e,o,s){return await async function(t,n,e,o=null,s=null){const i=new FormData;i.append("description",n),i.append("photo",e),null!==o&&i.append("lat",o),null!==s&&i.append("lon",s);const r=await fetch(`${a}/stories`,{method:"POST",headers:{Authorization:`Bearer ${t}`},body:i});return await r.json()}(t,n,e,o,s)}},947:(t,n,e)=>{e.r(n),e.d(n,{default:()=>r});class a{constructor(t){this.container=t,this.onSubmit=null,this.onAlert=null}render(){this.container.innerHTML='\n      <h2 style="text-align:center; margin-bottom:20px; font-weight:700; font-size:28px; color:#333;">Login</h2>\n      <form id="loginForm" class="story-form" aria-label="Form Login Pengguna">\n        <div class="form-control">\n          <label for="email">Email:</label>\n          <input type="email" id="email" name="email" placeholder="Masukkan email" required aria-required="true" />\n        </div>\n        <div class="form-control">\n          <label for="password">Password:</label>\n          <input type="password" id="password" name="password" placeholder="Masukkan password" required aria-required="true" />\n        </div>\n        <div class="form-buttons" style="margin-top: 20px;">\n          <button class="btn" type="submit">Masuk</button>\n          <button type="button" id="cancel-button" class="btn btn-outline">Batal</button>\n        </div>\n      </form>\n    ',this.#t()}#t(){const t=this.container.querySelector("#loginForm"),n=this.container.querySelector("#cancel-button");t.addEventListener("submit",(n=>{n.preventDefault();const e=t.elements.email.value.trim(),a=t.elements.password.value;e&&a?this.onSubmit&&this.onSubmit(e,a):this.onAlert?.("Email dan password harus diisi.")})),n.addEventListener("click",(()=>{window.location.hash="#home"}))}showError(t){this.onAlert?.(t)}}var o=e(82),s=e(885);class i{constructor(t){this.view=t,this.view.onSubmit=this.handleLogin.bind(this)}async handleLogin(t,n){try{const e=await o.Lx(t,n);!e.error&&e.loginResult&&e.loginResult.token?(o.WG(e.loginResult.token),o.ht(e.loginResult.name||"Guest"),sessionStorage.setItem("loginSuccess","true"),"function"==typeof window.updateNav&&window.updateNav(),await(0,s.V)("#stories")):this.view.showError(`Login gagal: ${e.message||"Email atau password salah."}`)}catch(t){console.error("Login error:",t),this.view.showError("Terjadi kesalahan saat login, silakan coba lagi.")}}}function r(t){const n=new a(t);new i(n),n.render()}}}]);
//# sourceMappingURL=947.864b907deff32508f131.bundle.js.map